"""LCM type definitions
This file automatically generated by lcm.
DO NOT MODIFY BY HAND!!!!
"""

try:
    import cStringIO.StringIO as BytesIO
except ImportError:
    from io import BytesIO
import struct

class lcmt_viewer2_comms(object):
    __slots__ = ["utime", "format", "format_version_major", "format_version_minor", "num_bytes", "data"]

    __typenames__ = ["int64_t", "string", "int32_t", "int32_t", "int32_t", "byte"]

    __dimensions__ = [None, None, None, None, None, ["num_bytes"]]

    def __init__(self):
        self.utime = 0
        self.format = ""
        self.format_version_major = 0
        self.format_version_minor = 0
        self.num_bytes = 0
        self.data = ""

    def encode(self):
        buf = BytesIO()
        buf.write(lcmt_viewer2_comms._get_packed_fingerprint())
        self._encode_one(buf)
        return buf.getvalue()

    def _encode_one(self, buf):
        buf.write(struct.pack(">q", self.utime))
        __format_encoded = self.format.encode('utf-8')
        buf.write(struct.pack('>I', len(__format_encoded)+1))
        buf.write(__format_encoded)
        buf.write(b"\0")
        buf.write(struct.pack(">iii", self.format_version_major, self.format_version_minor, self.num_bytes))
        buf.write(bytearray(self.data[:self.num_bytes]))

    def decode(data):
        if hasattr(data, 'read'):
            buf = data
        else:
            buf = BytesIO(data)
        if buf.read(8) != lcmt_viewer2_comms._get_packed_fingerprint():
            raise ValueError("Decode error")
        return lcmt_viewer2_comms._decode_one(buf)
    decode = staticmethod(decode)

    def _decode_one(buf):
        self = lcmt_viewer2_comms()
        self.utime = struct.unpack(">q", buf.read(8))[0]
        __format_len = struct.unpack('>I', buf.read(4))[0]
        self.format = buf.read(__format_len)[:-1].decode('utf-8', 'replace')
        self.format_version_major, self.format_version_minor, self.num_bytes = struct.unpack(">iii", buf.read(12))
        self.data = buf.read(self.num_bytes)
        return self
    _decode_one = staticmethod(_decode_one)

    _hash = None
    def _get_hash_recursive(parents):
        if lcmt_viewer2_comms in parents: return 0
        tmphash = (0x69b4701f99e2b45f) & 0xffffffffffffffff
        tmphash  = (((tmphash<<1)&0xffffffffffffffff) + (tmphash>>63)) & 0xffffffffffffffff
        return tmphash
    _get_hash_recursive = staticmethod(_get_hash_recursive)
    _packed_fingerprint = None

    def _get_packed_fingerprint():
        if lcmt_viewer2_comms._packed_fingerprint is None:
            lcmt_viewer2_comms._packed_fingerprint = struct.pack(">Q", lcmt_viewer2_comms._get_hash_recursive([]))
        return lcmt_viewer2_comms._packed_fingerprint
    _get_packed_fingerprint = staticmethod(_get_packed_fingerprint)

